<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lpxz.lpxzblog.dao.TeacherMapper">
    <!--
   这里传递过来的id，只有一个属性的时候，下面可以写任何值
   association中column多参数配置：
       column="{key=value,key=value}"
       其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。
   -->
    <select id="getTeacher" resultType="Teacher">
        select * from teacher
    </select>

    <select id="getTeacherById" resultMap="TeacherStudent">
        select s.id sId, s.name sName, t.name tName, t.id tId
        from student s, teacher t
        where s.tId = t.id and t.id = #{tId}
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tId"/>
        <result property="name" column="tName"/>
        <!-- 集合：collection
        javaType="" 指定属性的类型
        集合中的泛型信息，使用 ofType 获取
        -->
        <collection property="studentList" ofType="Student">
            <result property="id" column="sId"/>
            <result property="name" column="sName"/>
            <result property="tId" column="tId"/>
        </collection>
    </resultMap>

    <select id="getTeacherById2" resultMap="TeacherStudent2">
        select * from teacher where id = #{tId}
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <collection property="studentList" ofType="Student" select="getStudentByTeacher" column="id"/>
    </resultMap>
    <select id="getStudentByTeacher" resultType="Student">
        select * from student where tId = #{tId}
    </select>
</mapper>